@using OpenOrderSystem.Areas.Staff.ViewModels.Ingredients
@using OpenOrderSystem.Data.DataModels
@using OpenOrderSystem.ViewModels.Shared;
    using OpenOrderSystem.ViewModels.Shared
@model CreateEditVM

@{
    ViewData["Title"] = Model.Action == CrudAction.Edit ? $"Edit Ingredient #{Model.Id} {Model.Name}" : "New Ingredient";
    Layout = "_LayoutManager";
}

<h1>@(Model.Action == CrudAction.Edit ? $"Edit #{Model.Id}" : "New Ingredient")</h1>

<h4>@(Model.Action == CrudAction.Edit ? Model.Name : "")</h4>
<hr />
<div class="row bg-dark gap-2 px-2 py-4">
    <div asp-validation-summary="ModelOnly" class="col-12 text-danger"></div>
    <div class="col-4">
        <form id="ce_form" action="@(Model.Action == CrudAction.Edit ? "Edit" : "Create")" method="post">
            <h5>Ingredient Information</h5>
            <div class="form-group mb-1">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-1">
                <label asp-for="Price" class="control-label"></label>
                <div class="input-group">
                    <span class="input-group-text">$</span>
                    <input asp-for="Price" class="form-control" />
                </div>
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group mb-1">
@*                 <label asp-for=IngredientCategoryId class="control-label"></label>
                <select asp-for="IngredientCategoryId" class="form-select text-center">
                    <option value="" hidden disabled selected>&mdash; Make Selection &mdash;</option>
                    @foreach (var iCat in Model.IngredientCategories)
                    {
                        <option value="@iCat.Id">@iCat.Name &mdash; @(iCat.Type == IngredientType.Exclusive ? "One Selection Per Category" : "Allows Multiple Selection")</option>
                    }
                </select>
                <span asp-validation-for="IngredientCategoryId"></span> *@
            </div>
            @Html.AntiForgeryToken()
            <input asp-for="Id" hidden />
        </form>
    </div>
@*     <div class="col-5">
        <h5>Other Ingredients in Category:</h5>
        <ul class="row row-cols-2">
            @foreach (var iCat in Model.IngredientCategories)
            {
                if (iCat.MemberIngredients != null && iCat.MemberIngredients.Any())
                {
                    foreach (var catIng in iCat.MemberIngredients)
                    {
                        <li class="category-ingredient col" data-cat-id="@iCat.Id" @(ingre ? "" : "hidden")>@catIng.Name</li>
                    }                    
                }
                else
                {
                    <li class="category-ingredient col" data-cat-id="0" hidden>None</li>
                }
            }
        </ul>
    </div> *@
    <div class="d-flex w-100 text-end">
        <div class="ms-auto">
            <button id="submit" class="btn btn-primary px-5 mb-1"><i class="fa-sharp fa-floppy-disk me-1"></i> Save</button>
            <br />
            <a class="" asp-action="Index">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $('#IngredientCategoryId').on('input', () => {
            const catId = +$('#IngredientCategoryId').val();
            $('.category-ingredient').each((i, element) => {
                const elemId = $(element).data('cat-id');
                var hidden = true;
                if (catId === elemId) {
                    hidden = false;
                }
                $(element).prop('hidden', hidden);
            });
        });

        if ($('#Name').val() == '') {
            $('#Price').val('');
        }
        else {
            var price = +$('#Price').val();
            $('#Price').val(price.toFixed(2));
        }

        $('#Price').on('change', () => {
            const price = convertPriceInput($('#Price').val());
            $('#Price').val(price);
        });

        $('#submit').on('click', () => {
            $('#ce_form').submit();
        });
    </script>
}
